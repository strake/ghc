TYPE SIGNATURES
TYPE CONSTRUCTORS
  class C1 a where
    meth1 :: a -> a
    {-# MINIMAL meth1 #-}
  class C2 a b where
    meth2 :: a ~ b => a -> b
    {-# MINIMAL meth2 #-}
  class C3 a b where
    type family F3 b open
      Kind: * -> *
    meth3 :: a -> F3 b -> F3 b
    {-# MINIMAL meth3 #-}
  class C4 a b where
    meth4 :: a -> F4 b -> F4 b
    {-# MINIMAL meth4 #-}
  type family F4 a open
    Kind: * -> *
  type Syn1 a = F4 a
  type Syn2 a = [a]
COERCION AXIOMS
  axiom Roles3.NTCo:C1 :: C1 a = a -> a -- Defined at Roles3.hs:6:1
  axiom Roles3.NTCo:C2 ::
    C2 a b = (a ~ b) => a -> b -- Defined at Roles3.hs:9:1
  axiom Roles3.NTCo:C3 ::
    C3 a b = a -> F3 b -> F3 b -- Defined at Roles3.hs:12:1
  axiom Roles3.NTCo:C4 ::
    C4 a b = a -> F4 b -> F4 b -- Defined at Roles3.hs:18:1
Dependent modules: []
Dependent packages: [base-4.9.0.0, ghc-prim-0.5.0.0,
                     integer-gmp-1.0.0.0]

==================== Typechecker ====================
Roles3.$tcC4
  = GHC.Types.TyCon
      0## 0## Roles3.$trModule (GHC.Types.TrNameS "C4"#)
Roles3.$tc'D:C4
  = GHC.Types.TyCon
      0## 0## Roles3.$trModule (GHC.Types.TrNameS "'D:C4"#)
Roles3.$tcC3
  = GHC.Types.TyCon
      0## 0## Roles3.$trModule (GHC.Types.TrNameS "C3"#)
Roles3.$tc'D:C3
  = GHC.Types.TyCon
      0## 0## Roles3.$trModule (GHC.Types.TrNameS "'D:C3"#)
Roles3.$tcC2
  = GHC.Types.TyCon
      0## 0## Roles3.$trModule (GHC.Types.TrNameS "C2"#)
Roles3.$tc'D:C2
  = GHC.Types.TyCon
      0## 0## Roles3.$trModule (GHC.Types.TrNameS "'D:C2"#)
Roles3.$tcC1
  = GHC.Types.TyCon
      0## 0## Roles3.$trModule (GHC.Types.TrNameS "C1"#)
Roles3.$tc'D:C1
  = GHC.Types.TyCon
      0## 0## Roles3.$trModule (GHC.Types.TrNameS "'D:C1"#)
Roles3.$trModule
  = GHC.Types.Module
      (GHC.Types.TrNameS "main"#) (GHC.Types.TrNameS "Roles3"#)

