TYPE SIGNATURES
TYPE CONSTRUCTORS
  type role T1 nominal
  data T1 a = K1 a
    Kind: * -> *
  data T2 a = K2 a
    Kind: * -> *
  type role T3 phantom
  data T3 (a :: k) = K3
    Kind: forall k1. k1 -> *
  type role T4 nominal nominal
  data T4 (a :: * -> *) b = K4 (a b)
    Kind: (* -> *) -> * -> *
  data T5 a = K5 a
    Kind: * -> *
  type role T6 phantom
  data T6 (a :: k) = K6
    Kind: forall k1. k1 -> *
  type role T7 phantom representational
  data T7 (a :: k) b = K7 b
    Kind: forall k1. k1 -> * -> *
COERCION AXIOMS
Dependent modules: []
Dependent packages: [base-4.9.0.0, ghc-prim-0.5.0.0,
                     integer-gmp-1.0.0.0]

==================== Typechecker ====================
Roles1.$tcT7 = TyCon 0## 0## Roles1.$trModule (TrNameS "T7"#)
Roles1.$tc'K7 = TyCon 0## 0## Roles1.$trModule (TrNameS "'K7"#)
Roles1.$tcT6 = TyCon 0## 0## Roles1.$trModule (TrNameS "T6"#)
Roles1.$tc'K6 = TyCon 0## 0## Roles1.$trModule (TrNameS "'K6"#)
Roles1.$tcT5 = TyCon 0## 0## Roles1.$trModule (TrNameS "T5"#)
Roles1.$tc'K5 = TyCon 0## 0## Roles1.$trModule (TrNameS "'K5"#)
Roles1.$tcT4 = TyCon 0## 0## Roles1.$trModule (TrNameS "T4"#)
Roles1.$tc'K4 = TyCon 0## 0## Roles1.$trModule (TrNameS "'K4"#)
Roles1.$tcT3 = TyCon 0## 0## Roles1.$trModule (TrNameS "T3"#)
Roles1.$tc'K3 = TyCon 0## 0## Roles1.$trModule (TrNameS "'K3"#)
Roles1.$tcT2 = TyCon 0## 0## Roles1.$trModule (TrNameS "T2"#)
Roles1.$tc'K2 = TyCon 0## 0## Roles1.$trModule (TrNameS "'K2"#)
Roles1.$tcT1 = TyCon 0## 0## Roles1.$trModule (TrNameS "T1"#)
Roles1.$tc'K1 = TyCon 0## 0## Roles1.$trModule (TrNameS "'K1"#)
Roles1.$trModule = Module (TrNameS "main"#) (TrNameS "Roles1"#)

