
T9662.hs:49:7:
    Couldn't match type ‘k’ with ‘n’
      ‘k’ is a rigid type variable bound by
          the type signature for:
          test :: Shape (((sh :. k) :. m) :. n)
                  -> Shape (((sh :. m) :. n) :. k)
          at T9662.hs:44:9
      ‘n’ is a rigid type variable bound by
          the type signature for:
          test :: Shape (((sh :. k) :. m) :. n)
                  -> Shape (((sh :. m) :. n) :. k)
          at T9662.hs:44:9
    Expected type: Exp (((sh :. m) :. n) :. k)
                   -> Exp (((sh :. k) :. m) :. n)
      Actual type: Exp (((sh :. k) :. m) :. n)
                   -> Exp (((sh :. k) :. m) :. n)
    Relevant bindings include
      test :: Shape (((sh :. k) :. m) :. n)
              -> Shape (((sh :. m) :. n) :. k)
        (bound at T9662.hs:45:1)
    In the second argument of ‘backpermute’, namely ‘id’
    In the expression:
      backpermute
        (modify
           (atom :. atom :. atom :. atom)
           (\ (sh :. k :. m :. n) -> (sh :. m :. n :. k)))
        id

T9662.hs:49:7:
    Couldn't match type ‘m’ with ‘k’
      ‘m’ is a rigid type variable bound by
          the type signature for:
          test :: Shape (((sh :. k) :. m) :. n)
                  -> Shape (((sh :. m) :. n) :. k)
          at T9662.hs:44:9
      ‘k’ is a rigid type variable bound by
          the type signature for:
          test :: Shape (((sh :. k) :. m) :. n)
                  -> Shape (((sh :. m) :. n) :. k)
          at T9662.hs:44:9
    Expected type: Exp (((sh :. m) :. n) :. k)
                   -> Exp (((sh :. k) :. m) :. n)
      Actual type: Exp (((sh :. k) :. m) :. n)
                   -> Exp (((sh :. k) :. m) :. n)
    Relevant bindings include
      test :: Shape (((sh :. k) :. m) :. n)
              -> Shape (((sh :. m) :. n) :. k)
        (bound at T9662.hs:45:1)
    In the second argument of ‘backpermute’, namely ‘id’
    In the expression:
      backpermute
        (modify
           (atom :. atom :. atom :. atom)
           (\ (sh :. k :. m :. n) -> (sh :. m :. n :. k)))
        id

T9662.hs:49:7:
    Couldn't match type ‘n’ with ‘m’
      ‘n’ is a rigid type variable bound by
          the type signature for:
          test :: Shape (((sh :. k) :. m) :. n)
                  -> Shape (((sh :. m) :. n) :. k)
          at T9662.hs:44:9
      ‘m’ is a rigid type variable bound by
          the type signature for:
          test :: Shape (((sh :. k) :. m) :. n)
                  -> Shape (((sh :. m) :. n) :. k)
          at T9662.hs:44:9
    Expected type: Exp (((sh :. m) :. n) :. k)
                   -> Exp (((sh :. k) :. m) :. n)
      Actual type: Exp (((sh :. k) :. m) :. n)
                   -> Exp (((sh :. k) :. m) :. n)
    Relevant bindings include
      test :: Shape (((sh :. k) :. m) :. n)
              -> Shape (((sh :. m) :. n) :. k)
        (bound at T9662.hs:45:1)
    In the second argument of ‘backpermute’, namely ‘id’
    In the expression:
      backpermute
        (modify
           (atom :. atom :. atom :. atom)
           (\ (sh :. k :. m :. n) -> (sh :. m :. n :. k)))
        id
