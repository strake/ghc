TYPE SIGNATURES
  emptyL :: forall a. ListColl a
  test2 ::
    forall c t t1. (Num t, Num t1, Coll c, Elem c ~ (t, t1)) => c -> c
TYPE CONSTRUCTORS
  class Coll c where
    type family Elem c open
      Kind: * -> *
    empty :: c
    insert :: Elem c -> c -> c
    {-# MINIMAL empty, insert #-}
  data ListColl a = L [a]
    Kind: * -> *
COERCION AXIOMS
  axiom Foo.TFCo:R:ElemListColl ::
    Elem (ListColl a) = a -- Defined at T3017.hs:13:9
INSTANCES
  instance Coll (ListColl a) -- Defined at T3017.hs:12:11
FAMILY INSTANCES
  type Elem (ListColl a)
Dependent modules: []
Dependent packages: [base-4.9.0.0, ghc-prim-0.5.0.0,
                     integer-gmp-1.0.0.0]
