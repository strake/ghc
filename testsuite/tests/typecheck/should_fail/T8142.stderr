
T8142.hs:6:18: error:
    Couldn't match type ‘Nu g0’ with ‘Nu g’
    NB: ‘Nu’ is a type function, and may not be injective
    The type variable ‘g0’ is ambiguous
    Expected type: Nu ((,) t) -> Nu g
      Actual type: Nu ((,) t0) -> Nu g0
    When checking that ‘h’ has the inferred type
      h :: forall t (g :: * -> *). Nu ((,) t) -> Nu g
    Probable cause: the inferred type is ambiguous
    In an equation for ‘tracer’:
        tracer
          = h
          where
              h = (\ (_, b) -> ((outI . fmap h) b)) . out

T8142.hs:6:57: error:
    Couldn't match type ‘Nu ((,) t)’ with ‘g (Nu ((,) t))’
    Expected type: Nu ((,) t) -> (t, g (Nu ((,) t)))
      Actual type: Nu ((,) t) -> (t, Nu ((,) t))
    Relevant bindings include
      h :: Nu ((,) t) -> Nu g (bound at T8142.hs:6:18)
    In the second argument of ‘(.)’, namely ‘out’
    In the expression: (\ (_, b) -> ((outI . fmap h) b)) . out
