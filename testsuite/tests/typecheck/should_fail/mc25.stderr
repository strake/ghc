
mc25.hs:9:24:
    No instance for (Functor t2) arising from a use of ‘fmap’
    Possible fix:
      add (Functor t2) to the context of
        a type expected by the context: (a -> b) -> t2 a -> t2 b
        or the inferred type of z :: t (t2 t1)
    In the expression: fmap
    In a stmt of a monad comprehension: then group by x using take
    In the expression: [x | x <- [1 .. 10], then group by x using take]

mc25.hs:9:46:
    Couldn't match type ‘Int’ with ‘a -> t1’
    Expected type: (a -> t1) -> [a] -> t (t2 a)
      Actual type: Int -> [a] -> [a]
    Relevant bindings include z :: t (t2 t1) (bound at mc25.hs:9:1)
    In the expression: take
    In a stmt of a monad comprehension: then group by x using take
