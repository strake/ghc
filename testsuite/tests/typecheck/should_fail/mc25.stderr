
mc25.hs:9:10: error:
    No instance for (Functor t1) arising from a use of ‘fmap’
    Possible fix:
      add (Functor t1) to the context of
        a type expected by the context: (a -> b) -> t1 a -> t1 b
        or the inferred type of z :: [t1 t]
    In the expression: fmap
    In a stmt of a monad comprehension: then group by x using take
    In the expression: [x | x <- [1 .. 10], then group by x using take]

mc25.hs:9:46: error:
    Couldn't match type ‘a -> t’ with ‘Int’
    Expected type: (a -> t) -> [a] -> [t1 a]
      Actual type: Int -> [t1 a] -> [t1 a]
    In the expression: take
    In a stmt of a monad comprehension: then group by x using take
    Relevant bindings include z :: [t1 t] (bound at mc25.hs:9:1)
