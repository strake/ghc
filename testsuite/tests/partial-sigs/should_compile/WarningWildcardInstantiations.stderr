TYPE SIGNATURES
  bar :: forall w_ w_1. w_ -> (w_ -> w_1) -> w_1
  foo :: forall w_a. (Show w_a, Enum w_a) => w_a -> String
TYPE CONSTRUCTORS
COERCION AXIOMS
Dependent modules: []
Dependent packages: [base-4.8.2.0, ghc-prim-0.4.0.0,
                     integer-gmp-1.0.0.0]

WarningWildcardInstantiations.hs:5:14: warning:
    Found type wildcard ‘_a’ standing for ‘w_a’
    Where: ‘w_a’ is a rigid type variable bound by
                 the inferred type of foo :: (Enum w_a, Show w_a) => w_a -> String
                 at WarningWildcardInstantiations.hs:6:1
    In the type signature for ‘foo’: (Show _a, _) => _a -> _

WarningWildcardInstantiations.hs:5:18: warning:
    Found hole ‘_’ with inferred constraints: Enum w_a
    In the type signature for ‘foo’: (Show _a, _) => _a -> _

WarningWildcardInstantiations.hs:5:30: warning:
    Found type wildcard ‘_’ standing for ‘String’
    In the type signature for ‘foo’: (Show _a, _) => _a -> _

WarningWildcardInstantiations.hs:8:8: warning:
    Found type wildcard ‘_’ standing for ‘w_’
    Where: ‘w_’ is a rigid type variable bound by
                the inferred type of bar :: w_ -> (w_ -> w_1) -> w_1
                at WarningWildcardInstantiations.hs:9:1
    In the type signature for ‘bar’: _ -> _ -> _

WarningWildcardInstantiations.hs:8:13: warning:
    Found type wildcard ‘_’ standing for ‘w_ -> w_1’
    Where: ‘w_’ is a rigid type variable bound by
                the inferred type of bar :: w_ -> (w_ -> w_1) -> w_1
                at WarningWildcardInstantiations.hs:9:1
           ‘w_1’ is a rigid type variable bound by
                 the inferred type of bar :: w_ -> (w_ -> w_1) -> w_1
                 at WarningWildcardInstantiations.hs:9:1
    In the type signature for ‘bar’: _ -> _ -> _

WarningWildcardInstantiations.hs:8:18: warning:
    Found type wildcard ‘_’ standing for ‘w_1’
    Where: ‘w_1’ is a rigid type variable bound by
                 the inferred type of bar :: w_ -> (w_ -> w_1) -> w_1
                 at WarningWildcardInstantiations.hs:9:1
    In the type signature for ‘bar’: _ -> _ -> _
