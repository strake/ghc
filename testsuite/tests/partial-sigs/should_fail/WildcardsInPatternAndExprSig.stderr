
WildcardsInPatternAndExprSig.hs:4:18:
    Found hole ‘_a’ with type: w_c
    Where: ‘w_c’ is a rigid type variable bound by
                 the inferred type of bar :: Maybe [w_c] -> w_c -> [w_c]
                 at WildcardsInPatternAndExprSig.hs:4:1
    To use the inferred type, enable PartialTypeSignatures
    Relevant bindings include
      bar :: Maybe [w_c] -> w_c -> [w_c]
        (bound at WildcardsInPatternAndExprSig.hs:4:1)
    In a pattern type signature: _a
    In the pattern: x :: _a
    In the pattern: [x :: _a]

WildcardsInPatternAndExprSig.hs:4:25:
    Found hole ‘_’ with type: [w_c]
    Where: ‘w_c’ is a rigid type variable bound by
                 the inferred type of bar :: Maybe [w_c] -> w_c -> [w_c]
                 at WildcardsInPatternAndExprSig.hs:4:1
    To use the inferred type, enable PartialTypeSignatures
    Relevant bindings include
      bar :: Maybe [w_c] -> w_c -> [w_c]
        (bound at WildcardsInPatternAndExprSig.hs:4:1)
    In a pattern type signature: _
    In the pattern: [x :: _a] :: _
    In the pattern: Just ([x :: _a] :: _)

WildcardsInPatternAndExprSig.hs:4:38:
    Found hole ‘_b’ with type: w_c
    Where: ‘w_c’ is a rigid type variable bound by
                 the inferred type of bar :: Maybe [w_c] -> w_c -> [w_c]
                 at WildcardsInPatternAndExprSig.hs:4:1
    To use the inferred type, enable PartialTypeSignatures
    Relevant bindings include
      bar :: Maybe [w_c] -> w_c -> [w_c]
        (bound at WildcardsInPatternAndExprSig.hs:4:1)
    In a pattern type signature: Maybe [_b]
    In the pattern: Just ([x :: _a] :: _) :: Maybe [_b]
    In an equation for ‘bar’:
        bar (Just ([x :: _a] :: _) :: Maybe [_b]) (z :: _c)
          = [x, z] :: [_d]

WildcardsInPatternAndExprSig.hs:4:49:
    Found hole ‘_c’ with type: w_c
    Where: ‘w_c’ is a rigid type variable bound by
                 the inferred type of bar :: Maybe [w_c] -> w_c -> [w_c]
                 at WildcardsInPatternAndExprSig.hs:4:1
    To use the inferred type, enable PartialTypeSignatures
    Relevant bindings include
      x :: w_c (bound at WildcardsInPatternAndExprSig.hs:4:13)
      bar :: Maybe [w_c] -> w_c -> [w_c]
        (bound at WildcardsInPatternAndExprSig.hs:4:1)
    In a pattern type signature: _c
    In the pattern: z :: _c
    In an equation for ‘bar’:
        bar (Just ([x :: _a] :: _) :: Maybe [_b]) (z :: _c)
          = [x, z] :: [_d]

WildcardsInPatternAndExprSig.hs:4:66:
    Found hole ‘_d’ with type: w_c
    Where: ‘w_c’ is a rigid type variable bound by
                 the inferred type of bar :: Maybe [w_c] -> w_c -> [w_c]
                 at WildcardsInPatternAndExprSig.hs:4:1
    To use the inferred type, enable PartialTypeSignatures
    Relevant bindings include
      z :: w_c (bound at WildcardsInPatternAndExprSig.hs:4:44)
      x :: w_c (bound at WildcardsInPatternAndExprSig.hs:4:13)
      bar :: Maybe [w_c] -> w_c -> [w_c]
        (bound at WildcardsInPatternAndExprSig.hs:4:1)
    In an expression type signature: [_d]
    In the expression: [x, z] :: [_d]
    In an equation for ‘bar’:
        bar (Just ([x :: _a] :: _) :: Maybe [_b]) (z :: _c)
          = [x, z] :: [_d]
